<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Database Implementation Techniques Programming Task SoSe2013: CoGaDB::Column&lt; T &gt; Class Template Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Database Implementation Techniques Programming Task SoSe2013
   
   </div>
   <div id="projectbrief">DB2 Programming Task SoSe2013</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceCoGaDB.htm">CoGaDB</a>      </li>
      <li class="navelem"><a class="el" href="classCoGaDB_1_1Column.htm">Column</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">CoGaDB::Column&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="CoGaDB::Column" --><!-- doxytag: inherits="CoGaDB::ColumnBaseTyped" -->
<p><code>#include &lt;<a class="el" href="column_8hpp_source.htm">column.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for CoGaDB::Column&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="classCoGaDB_1_1Column__inherit__graph.png" border="0" usemap="#CoGaDB_1_1Column_3_01T_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="CoGaDB_1_1Column_3_01T_01_4_inherit__map" id="CoGaDB_1_1Column_3_01T_01_4_inherit__map">
<area shape="rect" id="node2" href="classCoGaDB_1_1ColumnBaseTyped.htm" title="This class represents a column with type T, is the base class for all typed column classes and allows..." alt="" coords="5,83,232,112"/><area shape="rect" id="node4" href="classCoGaDB_1_1ColumnBase.htm" title="This class represents a generic column, is the base class for all column classes and allows a uniform..." alt="" coords="40,5,197,35"/></map>
<center><span class="legend">[<a href="graph_legend.htm">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for CoGaDB::Column&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="classCoGaDB_1_1Column__coll__graph.png" border="0" usemap="#CoGaDB_1_1Column_3_01T_01_4_coll__map" alt="Collaboration graph"/></div>
<map name="CoGaDB_1_1Column_3_01T_01_4_coll__map" id="CoGaDB_1_1Column_3_01T_01_4_coll__map">
<area shape="rect" id="node2" href="classCoGaDB_1_1ColumnBaseTyped.htm" title="This class represents a column with type T, is the base class for all typed column classes and allows..." alt="" coords="5,261,232,291"/><area shape="rect" id="node4" href="classCoGaDB_1_1ColumnBase.htm" title="This class represents a generic column, is the base class for all column classes and allows a uniform..." alt="" coords="40,181,197,211"/><area shape="rect" id="node6" title="STL class." alt="" coords="79,85,159,115"/><area shape="rect" id="node8" title="STL class." alt="" coords="36,5,201,35"/><area shape="rect" id="node10" href="structCoGaDB_1_1Column_1_1Type__TID__Comparator.htm" title="CoGaDB::Column\&lt; T \&gt;::Type_TID_Comparator" alt="" coords="256,261,557,291"/></map>
<center><span class="legend">[<a href="graph_legend.htm">legend</a>]</span></center></div>

<p><a href="classCoGaDB_1_1Column-members.htm">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structCoGaDB_1_1Column_1_1Type__TID__Comparator.htm">Type_TID_Comparator</a></td></tr>
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#a44481f9232a50f794ec676d8673fbe1a">Column</a> (const std::string &amp;name, <a class="el" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> db_type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#a621aebd6e1e773434faf88d9f3374efd">~Column</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#aafa4cce4bb58a90461aaebba304b57f7">insert</a> (const boost::any &amp;new_value)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">appends a value new_Value to end of column  <a href="#aafa4cce4bb58a90461aaebba304b57f7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#abf710fd5fe45e15265cdcb0c4b3525cd">insert</a> (const T &amp;new_value)</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename InputIterator &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#a4a26ab2a3a184a02380eb936e98be675">insert</a> (InputIterator first, InputIterator last)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#a1a1287868c72d0b787e67823ca03bd6e">update</a> (<a class="el" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid, const boost::any &amp;new_value)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">updates the value on position tid with a value new_Value  <a href="#a1a1287868c72d0b787e67823ca03bd6e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#afcb097510382eea5d11d5b2bc949daa5">update</a> (<a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tid, const boost::any &amp;new_value)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">updates the values specified by the position list with a value new_Value  <a href="#afcb097510382eea5d11d5b2bc949daa5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#a53be8eb250bb6a1558ee310287b607ac">remove</a> (<a class="el" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">deletes the value on position tid  <a href="#a53be8eb250bb6a1558ee310287b607ac"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#ad4f7e740fcc1637c87219b60d31f1a05">remove</a> (<a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tid)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">deletes the values defined in the position list  <a href="#ad4f7e740fcc1637c87219b60d31f1a05"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#a26e3afbca849e28e17986c08a8720132">clearContent</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">deletes all values stored in the column  <a href="#a26e3afbca849e28e17986c08a8720132"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const boost::any&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#abb73422160b0559ec5cdfa4a87389b64">get</a> (<a class="el" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">generic function for fetching a value form a column (slow)  <a href="#abb73422160b0559ec5cdfa4a87389b64"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#aca3e004b9b02372235311f16c79a2bcb">print</a> () const   throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">prints the content of a column  <a href="#aca3e004b9b02372235311f16c79a2bcb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#a4dab93f9e3b6383acd1959c9a0495fff">size</a> () const   throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of values (rows) in a column  <a href="#a4dab93f9e3b6383acd1959c9a0495fff"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#accbee2285b9d47518547c5383a080552">getSizeinBytes</a> () const   throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the size in bytes the column consumes in main memory  <a href="#accbee2285b9d47518547c5383a080552"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#a83eb97a5171c978cf67592bb0fd55f5a">copy</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">virtual copy constructor  <a href="#a83eb97a5171c978cf67592bb0fd55f5a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#a24bd8a3baf1d5a5b7cdeabaafcfc945b">store</a> (const std::string &amp;path)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">store a column on the disc  <a href="#a24bd8a3baf1d5a5b7cdeabaafcfc945b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#a422928275ea027a5ea67cdc767d3add2">load</a> (const std::string &amp;path)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">load column from disc  <a href="#a422928275ea027a5ea67cdc767d3add2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#a89cf6f9a5748168bcf1bd60e52b4c67e">isMaterialized</a> () const   throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">use this method to determine whether the column is materialized or a Lookup <a class="el" href="classCoGaDB_1_1Column.htm">Column</a>  <a href="#a89cf6f9a5748168bcf1bd60e52b4c67e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#a8ba3e2a3c8bd3e320d059146b0244555">isCompressed</a> () const   throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">use this method to determine whether the column is materialized or a Lookup <a class="el" href="classCoGaDB_1_1Column.htm">Column</a>  <a href="#a8ba3e2a3c8bd3e320d059146b0244555"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#ab676d44267ae7fb54068f14bd6a26104">operator[]</a> (const int index)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">defines operator[] for this class, which enables the user to thread all typed columns as arrays.  <a href="#ab676d44267ae7fb54068f14bd6a26104"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; T &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#a1beb62451a2b27cfa0b5317d3e94ca5f">getContent</a> ()</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#abc0fc654372f9145d96e42e058e64b54">getSizeinBytes</a> () const  throw()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the size in bytes the column consumes in main memory  <a href="#abc0fc654372f9145d96e42e058e64b54"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <br class="typebreak"/>
<a class="el" href="structCoGaDB_1_1Column_1_1Type__TID__Comparator.htm">CoGaDB::Column::Type_TID_Comparator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#ac4ad5def8ec3c86645fc18acf516bf5a">type_tid_comparator</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br/>
class CoGaDB::Column&lt; T &gt;</h3>


<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00010">10</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a44481f9232a50f794ec676d8673fbe1a"></a><!-- doxytag: member="CoGaDB::Column::Column" ref="a44481f9232a50f794ec676d8673fbe1a" args="(const std::string &amp;name, AttributeType db_type)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm">Column</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a>&#160;</td>
          <td class="paramname"><em>db_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00064">64</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a621aebd6e1e773434faf88d9f3374efd"></a><!-- doxytag: member="CoGaDB::Column::~Column" ref="a621aebd6e1e773434faf88d9f3374efd" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::~<a class="el" href="classCoGaDB_1_1Column.htm">Column</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00074">74</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a26e3afbca849e28e17986c08a8720132"></a><!-- doxytag: member="CoGaDB::Column::clearContent" ref="a26e3afbca849e28e17986c08a8720132" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#a26e3afbca849e28e17986c08a8720132">clearContent</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>deletes all values stored in the column </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#aef36a1764886ea25e05ba098571fa711">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00178">178</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a83eb97a5171c978cf67592bb0fd55f5a"></a><!-- doxytag: member="CoGaDB::Column::copy" ref="a83eb97a5171c978cf67592bb0fd55f5a" args="() const " -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d">ColumnPtr</a> <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#a83eb97a5171c978cf67592bb0fd55f5a">copy</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>virtual copy constructor </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>a ColumnPtr to an exakt copy of the current column </dd></dl>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a811d44896f4edb003b9bad6e619a24c9">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00206">206</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="abb73422160b0559ec5cdfa4a87389b64"></a><!-- doxytag: member="CoGaDB::Column::get" ref="abb73422160b0559ec5cdfa4a87389b64" args="(TID tid)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const boost::any <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#abb73422160b0559ec5cdfa4a87389b64">get</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a>&#160;</td>
          <td class="paramname"><em>tid</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>generic function for fetching a value form a column (slow) </p>
<p>check whether the object is valid (e.g., when a tid is not valid, then the returned object is invalid as well) </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>object of type boost::any containing the value on position tid </dd></dl>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a1819921b10958505deb822bd55f5b7d7">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00184">184</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1beb62451a2b27cfa0b5317d3e94ca5f"></a><!-- doxytag: member="CoGaDB::Column::getContent" ref="a1beb62451a2b27cfa0b5317d3e94ca5f" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; T &gt; &amp; <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#a1beb62451a2b27cfa0b5317d3e94ca5f">getContent</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00079">79</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="accbee2285b9d47518547c5383a080552"></a><!-- doxytag: member="CoGaDB::Column::getSizeinBytes" ref="accbee2285b9d47518547c5383a080552" args="() const " -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#accbee2285b9d47518547c5383a080552">getSizeinBytes</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const  throw ()<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>returns the size in bytes the column consumes in main memory </p>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#ae990bc63aca6d10e6c25fc55f0d8de15">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00282">282</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="abc0fc654372f9145d96e42e058e64b54"></a><!-- doxytag: member="CoGaDB::Column::getSizeinBytes" ref="abc0fc654372f9145d96e42e058e64b54" args="() const " -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; std::string &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#accbee2285b9d47518547c5383a080552">getSizeinBytes</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const throw()<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>returns the size in bytes the column consumes in main memory </p>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#ae990bc63aca6d10e6c25fc55f0d8de15">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00288">288</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="aafa4cce4bb58a90461aaebba304b57f7"></a><!-- doxytag: member="CoGaDB::Column::insert" ref="aafa4cce4bb58a90461aaebba304b57f7" args="(const boost::any &amp;new_value)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#aafa4cce4bb58a90461aaebba304b57f7">insert</a> </td>
          <td>(</td>
          <td class="paramtype">const boost::any &amp;&#160;</td>
          <td class="paramname"><em>new_Value</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>appends a value new_Value to end of column </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a298584fc2f5bdaea233194ab6b6b0834">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00085">85</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="abf710fd5fe45e15265cdcb0c4b3525cd"></a><!-- doxytag: member="CoGaDB::Column::insert" ref="abf710fd5fe45e15265cdcb0c4b3525cd" args="(const T &amp;new_value)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#aafa4cce4bb58a90461aaebba304b57f7">insert</a> </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>new_value</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#ab7819f21dd77793ef1c9d12ac845fa76">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00096">96</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4a26ab2a3a184a02380eb936e98be675"></a><!-- doxytag: member="CoGaDB::Column::insert" ref="a4a26ab2a3a184a02380eb936e98be675" args="(InputIterator first, InputIterator last)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<div class="memtemplate">
template&lt;typename InputIterator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#aafa4cce4bb58a90461aaebba304b57f7">insert</a> </td>
          <td>(</td>
          <td class="paramtype">InputIterator&#160;</td>
          <td class="paramname"><em>first</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">InputIterator&#160;</td>
          <td class="paramname"><em>last</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00104">104</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8ba3e2a3c8bd3e320d059146b0244555"></a><!-- doxytag: member="CoGaDB::Column::isCompressed" ref="a8ba3e2a3c8bd3e320d059146b0244555" args="() const " -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#a8ba3e2a3c8bd3e320d059146b0244555">isCompressed</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const  throw ()<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>use this method to determine whether the column is materialized or a Lookup <a class="el" href="classCoGaDB_1_1Column.htm">Column</a> </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true in case the column is storing the compressed values and false otherwise. </dd></dl>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#acb4e29d5b1fb0bb8c1f3ec968311ebba">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00271">271</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a89cf6f9a5748168bcf1bd60e52b4c67e"></a><!-- doxytag: member="CoGaDB::Column::isMaterialized" ref="a89cf6f9a5748168bcf1bd60e52b4c67e" args="() const " -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#a89cf6f9a5748168bcf1bd60e52b4c67e">isMaterialized</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const  throw ()<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>use this method to determine whether the column is materialized or a Lookup <a class="el" href="classCoGaDB_1_1Column.htm">Column</a> </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true in case the column is storing the plain values (without compression) and false in case the column is a LookupColumn. </dd></dl>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#aeeb1eb6d5b3c4c421aa79bb5584da856">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00266">266</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a422928275ea027a5ea67cdc767d3add2"></a><!-- doxytag: member="CoGaDB::Column::load" ref="a422928275ea027a5ea67cdc767d3add2" args="(const std::string &amp;path)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#a422928275ea027a5ea67cdc767d3add2">load</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>load column from disc </p>
<p>calling load on a column that is not empty yields undefined behaviour </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a5ddfa2dbe32f62d7a12bd0edf5f6ccd2">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00249">249</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab676d44267ae7fb54068f14bd6a26104"></a><!-- doxytag: member="CoGaDB::Column::operator[]" ref="ab676d44267ae7fb54068f14bd6a26104" args="(const int index)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T &amp; <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>defines operator[] for this class, which enables the user to thread all typed columns as arrays. </p>
<p>Note that this method is pure virtual, so it has to be defined in a derived class. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>a reference to the value at position index </dd></dl>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a0f43450e8224027b9d1055ba8d758477">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00276">276</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="aca3e004b9b02372235311f16c79a2bcb"></a><!-- doxytag: member="CoGaDB::Column::print" ref="aca3e004b9b02372235311f16c79a2bcb" args="() const " -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#aca3e004b9b02372235311f16c79a2bcb">print</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const  throw ()<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>prints the content of a column </p>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac87ff73aa6d72bbf3b5ae510327e22c6">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00194">194</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a53be8eb250bb6a1558ee310287b607ac"></a><!-- doxytag: member="CoGaDB::Column::remove" ref="a53be8eb250bb6a1558ee310287b607ac" args="(TID tid)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#a53be8eb250bb6a1558ee310287b607ac">remove</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a>&#160;</td>
          <td class="paramname"><em>tid</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>deletes the value on position tid </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a92e8eb3fbeb4d58e65f23796266881d7">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00144">144</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad4f7e740fcc1637c87219b60d31f1a05"></a><!-- doxytag: member="CoGaDB::Column::remove" ref="ad4f7e740fcc1637c87219b60d31f1a05" args="(PositionListPtr tid)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#a53be8eb250bb6a1558ee310287b607ac">remove</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>&#160;</td>
          <td class="paramname"><em>tid</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>deletes the values defined in the position list </p>
<p>assumes tid list is sorted ascending </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a48ab5ffdecfbb26eb966e661966395fd">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00150">150</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4dab93f9e3b6383acd1959c9a0495fff"></a><!-- doxytag: member="CoGaDB::Column::size" ref="a4dab93f9e3b6383acd1959c9a0495fff" args="() const " -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#a4dab93f9e3b6383acd1959c9a0495fff">size</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const  throw ()<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>returns the number of values (rows) in a column </p>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8ff087045b933adcd017877c1f0802bc">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00202">202</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a24bd8a3baf1d5a5b7cdeabaafcfc945b"></a><!-- doxytag: member="CoGaDB::Column::store" ref="a24bd8a3baf1d5a5b7cdeabaafcfc945b" args="(const std::string &amp;path)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#a24bd8a3baf1d5a5b7cdeabaafcfc945b">store</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>store a column on the disc </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#a8b170edcae21575ea41c55df2c63e823">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00233">233</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1a1287868c72d0b787e67823ca03bd6e"></a><!-- doxytag: member="CoGaDB::Column::update" ref="a1a1287868c72d0b787e67823ca03bd6e" args="(TID tid, const boost::any &amp;new_value)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#a1a1287868c72d0b787e67823ca03bd6e">update</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a>&#160;</td>
          <td class="paramname"><em>tid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const boost::any &amp;&#160;</td>
          <td class="paramname"><em>new_Value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>updates the value on position tid with a value new_Value </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#ac8b41ece275215ee6ca82d57294f1bb9">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00110">110</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="afcb097510382eea5d11d5b2bc949daa5"></a><!-- doxytag: member="CoGaDB::Column::update" ref="afcb097510382eea5d11d5b2bc949daa5" args="(PositionListPtr tid, const boost::any &amp;new_value)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#a1a1287868c72d0b787e67823ca03bd6e">update</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>&#160;</td>
          <td class="paramname"><em>tids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const boost::any &amp;&#160;</td>
          <td class="paramname"><em>new_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>updates the values specified by the position list with a value new_Value </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true for sucess and false in case an error occured </dd></dl>

<p>Implements <a class="el" href="classCoGaDB_1_1ColumnBaseTyped.htm#aa067e7e8d65ba158434b2b04a2ef3f65">CoGaDB::ColumnBaseTyped&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00123">123</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="ac4ad5def8ec3c86645fc18acf516bf5a"></a><!-- doxytag: member="CoGaDB::Column::type_tid_comparator" ref="ac4ad5def8ec3c86645fc18acf516bf5a" args="" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structCoGaDB_1_1Column_1_1Type__TID__Comparator.htm">CoGaDB::Column::Type_TID_Comparator</a>  <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#ac4ad5def8ec3c86645fc18acf516bf5a">type_tid_comparator</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="af51cf7fdaf246c0f074774c4bda96453"></a><!-- doxytag: member="CoGaDB::Column::values_" ref="af51cf7fdaf246c0f074774c4bda96453" args="" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;T&gt; <a class="el" href="classCoGaDB_1_1Column.htm">CoGaDB::Column</a>&lt; T &gt;::<a class="el" href="classCoGaDB_1_1Column.htm#af51cf7fdaf246c0f074774c4bda96453">values_</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>values </p>

<p>Definition at line <a class="el" href="column_8hpp_source.htm#l00055">55</a> of file <a class="el" href="column_8hpp_source.htm">column.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="column_8hpp_source.htm">column.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Tue Apr 30 2013 14:01:03 for Database Implementation Techniques Programming Task SoSe2013 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
