<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Database Implementation Techniques Programming Task SoSe2013: compressed_column.hpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Database Implementation Techniques Programming Task SoSe2013
   
   </div>
   <div id="projectbrief">DB2 Programming Task SoSe2013</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">compressed_column.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="compressed__column_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="preprocessor">#pragma once</span>
<a name="l00003"></a>00003 <span class="preprocessor"></span>
<a name="l00004"></a>00004 <span class="preprocessor">#include &lt;<a class="code" href="column__base__typed_8hpp.htm">core/column_base_typed.hpp</a>&gt;</span>
<a name="l00005"></a>00005 
<a name="l00006"></a>00006 <span class="keyword">namespace </span>CoGaDB{
<a name="l00007"></a>00007         
<a name="l00018"></a>00018 <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00019"></a><a class="code" href="classCoGaDB_1_1CompressedColumn.htm">00019</a> <span class="keyword">class </span><a class="code" href="classCoGaDB_1_1CompressedColumn.htm" title="This class represents a compressed column with type T, is the base class for all compressed typed col...">CompressedColumn</a> : <span class="keyword">public</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm" title="This class represents a column with type T, is the base class for all typed column classes and allows...">ColumnBaseTyped</a>&lt;T&gt;{
<a name="l00020"></a>00020         <span class="keyword">public</span>:
<a name="l00021"></a>00021         <span class="comment">/***************** constructors and destructor *****************/</span>
<a name="l00022"></a>00022         <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a262285e6e9f5e9da0af460766d978e5f">CompressedColumn</a>(<span class="keyword">const</span> std::string&amp; name, <a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> db_type);
<a name="l00023"></a>00023         <span class="keyword">virtual</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a23f4eca59fa6f43ca95e221723728b0a">~CompressedColumn</a>();
<a name="l00024"></a>00024 
<a name="l00025"></a>00025         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#acc4ba721be59d5f3b2049031bd52df74" title="appends a value new_Value to end of column">insert</a>(<span class="keyword">const</span> boost::any&amp; new_Value)  = 0;
<a name="l00026"></a>00026         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#acc4ba721be59d5f3b2049031bd52df74" title="appends a value new_Value to end of column">insert</a>(<span class="keyword">const</span> T&amp; new_value)  = 0;
<a name="l00027"></a>00027 
<a name="l00028"></a>00028         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#af174d0f8d2eb8a1a1a891abf4a72af47" title="updates the value on position tid with a value new_Value">update</a>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid, <span class="keyword">const</span> boost::any&amp; new_value) = 0;
<a name="l00029"></a>00029         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#af174d0f8d2eb8a1a1a891abf4a72af47" title="updates the value on position tid with a value new_Value">update</a>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tid, <span class="keyword">const</span> boost::any&amp; new_value) = 0;      
<a name="l00030"></a>00030         
<a name="l00031"></a>00031         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">remove</span>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid)=0;
<a name="l00032"></a>00032         <span class="comment">//assumes tid list is sorted ascending</span>
<a name="l00033"></a>00033         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">remove</span>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tid)=0;
<a name="l00034"></a>00034         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a8c8300485edffa6846da7907a4978053" title="deletes all values stored in the column">clearContent</a>()=0;
<a name="l00035"></a>00035 
<a name="l00036"></a>00036         <span class="keyword">virtual</span> <span class="keyword">const</span> boost::any <span class="keyword">get</span>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid) = 0;
<a name="l00037"></a>00037         <span class="comment">//virtual const boost::any* const getRawData()=0;</span>
<a name="l00038"></a>00038         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#ad1805b7bec6013529aa2aaa17117d08b" title="prints the content of a column">print</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>() = 0;
<a name="l00039"></a>00039         <span class="keyword">virtual</span> <span class="keywordtype">size_t</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#ace77e03c40da17d6b158a008d305ea88" title="returns the number of values (rows) in a column">size</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>() = 0;
<a name="l00040"></a>00040         <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a293ce43770e123dcffad899281865a73" title="returns the size in bytes the column consumes in main memory">getSizeinBytes</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>() = 0;
<a name="l00041"></a>00041 
<a name="l00042"></a>00042         <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d" title="defines a smart pointer to a ColumnBase Object">ColumnPtr</a> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a313dfb52faac7302baf34357cc6aa6e8" title="virtual copy constructor">copy</a>() <span class="keyword">const</span> = 0;
<a name="l00043"></a>00043 
<a name="l00044"></a>00044         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a9058fe90f0081e187288c071d099ef61" title="store a column on the disc">store</a>(<span class="keyword">const</span> std::string&amp; path)  = 0;
<a name="l00045"></a>00045         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a67ca44ed4387d857210c790571db5531" title="load column from disc">load</a>(<span class="keyword">const</span> std::string&amp; path)  = 0;
<a name="l00046"></a>00046         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#ada550a1425ba2d502afeb99391b8124b" title="use this method to determine whether the column is materialized or a Lookup Column">isMaterialized</a>() <span class="keyword">const</span>  <span class="keywordflow">throw</span>();
<a name="l00047"></a>00047         
<a name="l00048"></a>00048         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#abccceb7dfbcce752a4dfc4ef06904c4f" title="use this method to determine whether the column is materialized or a Lookup Column">isCompressed</a>() <span class="keyword">const</span>  <span class="keywordflow">throw</span>();     
<a name="l00049"></a>00049 
<a name="l00050"></a>00050         
<a name="l00051"></a>00051         <span class="keyword">virtual</span> T&amp; <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a1a55526893e244c1642d79854d6849da" title="defines operator[] for this class, which enables the user to thread all typed columns as arrays...">operator[]</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> index)  = 0;
<a name="l00052"></a>00052 
<a name="l00053"></a>00053 };
<a name="l00054"></a>00054 
<a name="l00055"></a><a class="code" href="namespaceCoGaDB.htm#a25bcbfd6017a2aea1e2e0d1c48125708">00055</a> <span class="keyword">typedef</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm" title="This class represents a compressed column with type T, is the base class for all compressed typed col...">CompressedColumn&lt;int&gt;</a> <a class="code" href="namespaceCoGaDB.htm#a25bcbfd6017a2aea1e2e0d1c48125708">CompressedIntegerColumn</a>;
<a name="l00056"></a><a class="code" href="namespaceCoGaDB.htm#aa20fb4bc08623d2c52fe068428d50905">00056</a> <span class="keyword">typedef</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm" title="This class represents a compressed column with type T, is the base class for all compressed typed col...">CompressedColumn&lt;float&gt;</a> <a class="code" href="namespaceCoGaDB.htm#aa20fb4bc08623d2c52fe068428d50905">CompressedFloatColumn</a>;
<a name="l00057"></a><a class="code" href="namespaceCoGaDB.htm#a9e2b47fc7b5f933767f0a5895ee9b386">00057</a> <span class="keyword">typedef</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm" title="This class represents a compressed column with type T, is the base class for all compressed typed col...">CompressedColumn&lt;double&gt;</a> <a class="code" href="namespaceCoGaDB.htm#a9e2b47fc7b5f933767f0a5895ee9b386">CompressedDoubleColumn</a>;
<a name="l00058"></a><a class="code" href="namespaceCoGaDB.htm#a3657c3780f27a22c62849e0a816cbc46">00058</a> <span class="keyword">typedef</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm" title="This class represents a compressed column with type T, is the base class for all compressed typed col...">CompressedColumn&lt;std::string&gt;</a> <a class="code" href="namespaceCoGaDB.htm#a3657c3780f27a22c62849e0a816cbc46">CompressedStringColumn</a>;
<a name="l00059"></a>00059 
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 <span class="comment">/***************** Start of Implementation Section ******************/</span>
<a name="l00062"></a>00062 
<a name="l00063"></a>00063         
<a name="l00064"></a>00064         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00065"></a><a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a262285e6e9f5e9da0af460766d978e5f">00065</a>         <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a262285e6e9f5e9da0af460766d978e5f">CompressedColumn&lt;T&gt;::CompressedColumn</a>(<span class="keyword">const</span> std::string&amp; name, <a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> db_type) : <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm" title="This class represents a column with type T, is the base class for all typed column classes and allows...">ColumnBaseTyped</a>&lt;T&gt;(name,db_type){
<a name="l00066"></a>00066 
<a name="l00067"></a>00067         }
<a name="l00068"></a>00068 
<a name="l00069"></a>00069         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00070"></a><a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a23f4eca59fa6f43ca95e221723728b0a">00070</a>         <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#a23f4eca59fa6f43ca95e221723728b0a">CompressedColumn&lt;T&gt;::~CompressedColumn</a>(){
<a name="l00071"></a>00071 
<a name="l00072"></a>00072         }
<a name="l00073"></a>00073         
<a name="l00074"></a>00074         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00075"></a><a class="code" href="classCoGaDB_1_1CompressedColumn.htm#ada550a1425ba2d502afeb99391b8124b">00075</a>         <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#ada550a1425ba2d502afeb99391b8124b" title="use this method to determine whether the column is materialized or a Lookup Column">CompressedColumn&lt;T&gt;::isMaterialized</a>() <span class="keyword">const</span>  throw(){
<a name="l00076"></a>00076                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00077"></a>00077         }
<a name="l00078"></a>00078         
<a name="l00079"></a>00079         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00080"></a><a class="code" href="classCoGaDB_1_1CompressedColumn.htm#abccceb7dfbcce752a4dfc4ef06904c4f">00080</a>         <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1CompressedColumn.htm#abccceb7dfbcce752a4dfc4ef06904c4f" title="use this method to determine whether the column is materialized or a Lookup Column">CompressedColumn&lt;T&gt;::isCompressed</a>() <span class="keyword">const</span>  throw(){
<a name="l00081"></a>00081                 <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00082"></a>00082         }
<a name="l00083"></a>00083         
<a name="l00084"></a>00084         
<a name="l00085"></a>00085 <span class="comment">/*</span>
<a name="l00086"></a>00086 <span class="comment">        template&lt;class T&gt;</span>
<a name="l00087"></a>00087 <span class="comment">        bool CompressedColumn&lt;T&gt;::insert(const boost::any&amp; new_Value){</span>
<a name="l00088"></a>00088 <span class="comment"></span>
<a name="l00089"></a>00089 <span class="comment">                return false;</span>
<a name="l00090"></a>00090 <span class="comment">        }</span>
<a name="l00091"></a>00091 <span class="comment"></span>
<a name="l00092"></a>00092 <span class="comment">        template&lt;class T&gt;</span>
<a name="l00093"></a>00093 <span class="comment">        const boost::any CompressedColumn&lt;T&gt;::get(TID tid){</span>
<a name="l00094"></a>00094 <span class="comment"></span>
<a name="l00095"></a>00095 <span class="comment">                return boost::any();</span>
<a name="l00096"></a>00096 <span class="comment">        }</span>
<a name="l00097"></a>00097 <span class="comment"></span>
<a name="l00098"></a>00098 <span class="comment">        template&lt;class T&gt;</span>
<a name="l00099"></a>00099 <span class="comment">        void CompressedColumn&lt;T&gt;::print() const throw(){</span>
<a name="l00100"></a>00100 <span class="comment"></span>
<a name="l00101"></a>00101 <span class="comment">        }</span>
<a name="l00102"></a>00102 <span class="comment">        template&lt;class T&gt;</span>
<a name="l00103"></a>00103 <span class="comment">        size_t CompressedColumn&lt;T&gt;::size() const throw(){</span>
<a name="l00104"></a>00104 <span class="comment"></span>
<a name="l00105"></a>00105 <span class="comment">                return 0;</span>
<a name="l00106"></a>00106 <span class="comment">        }</span>
<a name="l00107"></a>00107 <span class="comment">        template&lt;class T&gt;</span>
<a name="l00108"></a>00108 <span class="comment">        const ColumnPtr CompressedColumn&lt;T&gt;::copy() const{</span>
<a name="l00109"></a>00109 <span class="comment"></span>
<a name="l00110"></a>00110 <span class="comment">                return ColumnPtr(NULL);</span>
<a name="l00111"></a>00111 <span class="comment">        }</span>
<a name="l00112"></a>00112 <span class="comment"></span>
<a name="l00113"></a>00113 <span class="comment">        template&lt;class T&gt;</span>
<a name="l00114"></a>00114 <span class="comment">        bool CompressedColumn&lt;T&gt;::store(const std::string&amp; path){</span>
<a name="l00115"></a>00115 <span class="comment"></span>
<a name="l00116"></a>00116 <span class="comment">                return std::vector&lt;TID&gt;();</span>
<a name="l00117"></a>00117 <span class="comment">        }</span>
<a name="l00118"></a>00118 <span class="comment">        template&lt;class T&gt;</span>
<a name="l00119"></a>00119 <span class="comment">        bool CompressedColumn&lt;T&gt;::load(const std::string&amp; path){</span>
<a name="l00120"></a>00120 <span class="comment"></span>
<a name="l00121"></a>00121 <span class="comment">                return false;</span>
<a name="l00122"></a>00122 <span class="comment">        }</span>
<a name="l00123"></a>00123 <span class="comment">        template&lt;class T&gt;</span>
<a name="l00124"></a>00124 <span class="comment">        bool CompressedColumn&lt;T&gt;::isMaterialized() const  throw(){</span>
<a name="l00125"></a>00125 <span class="comment"></span>
<a name="l00126"></a>00126 <span class="comment">                return false;</span>
<a name="l00127"></a>00127 <span class="comment">        }</span>
<a name="l00128"></a>00128 <span class="comment">        </span>
<a name="l00129"></a>00129 <span class="comment">        template&lt;class T&gt;</span>
<a name="l00130"></a>00130 <span class="comment">        bool CompressedColumn&lt;T&gt;::isCompressed() const  throw(){</span>
<a name="l00131"></a>00131 <span class="comment">                return true;</span>
<a name="l00132"></a>00132 <span class="comment">        }</span>
<a name="l00133"></a>00133 <span class="comment"></span>
<a name="l00134"></a>00134 <span class="comment">        template&lt;class T&gt;</span>
<a name="l00135"></a>00135 <span class="comment">        T&amp; CompressedColumn&lt;T&gt;::operator[](const int index){</span>
<a name="l00136"></a>00136 <span class="comment">                static T t;</span>
<a name="l00137"></a>00137 <span class="comment">                return t;</span>
<a name="l00138"></a>00138 <span class="comment">        }</span>
<a name="l00139"></a>00139 <span class="comment"></span>
<a name="l00140"></a>00140 <span class="comment">        template&lt;class T&gt;</span>
<a name="l00141"></a>00141 <span class="comment">        unsigned int CompressedColumn&lt;T&gt;::getSizeinBytes() const throw(){</span>
<a name="l00142"></a>00142 <span class="comment">                return values_.capacity()*sizeof(T);</span>
<a name="l00143"></a>00143 <span class="comment">        }</span>
<a name="l00144"></a>00144 <span class="comment">*/</span>
<a name="l00145"></a>00145 
<a name="l00146"></a>00146 <span class="comment">/***************** End of Implementation Section ******************/</span>
<a name="l00147"></a>00147 
<a name="l00148"></a>00148 
<a name="l00149"></a>00149 
<a name="l00150"></a>00150 }; <span class="comment">//end namespace CogaDB</span>
<a name="l00151"></a>00151 
</pre></div></div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Tue Apr 30 2013 14:01:03 for Database Implementation Techniques Programming Task SoSe2013 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
