<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Database Implementation Techniques Programming Task SoSe2013: lookup_array.hpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Database Implementation Techniques Programming Task SoSe2013
   
   </div>
   <div id="projectbrief">DB2 Programming Task SoSe2013</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">lookup_array.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="lookup__array_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="preprocessor">#pragma once</span>
<a name="l00003"></a>00003 <span class="preprocessor"></span>
<a name="l00004"></a>00004 <span class="preprocessor">#include &lt;<a class="code" href="column__base__typed_8hpp.htm">core/column_base_typed.hpp</a>&gt;</span>
<a name="l00005"></a>00005 <span class="preprocessor">#include &lt;<a class="code" href="column_8hpp.htm">core/column.hpp</a>&gt;</span>
<a name="l00006"></a>00006 <span class="preprocessor">#include &lt;lookup_table/lookup_column.hpp&gt;</span>
<a name="l00007"></a>00007 <span class="preprocessor">#include &lt;core/base_table.hpp&gt;</span>
<a name="l00008"></a>00008 
<a name="l00009"></a>00009 <span class="keyword">namespace </span>CoGaDB{
<a name="l00010"></a>00010 
<a name="l00023"></a>00023 <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00024"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm">00024</a> <span class="keyword">class </span><a class="code" href="classCoGaDB_1_1LookupArray.htm" title="A LookupArray is a LookupColumn which is applied on a materialized column (of the table that is index...">LookupArray</a> : <span class="keyword">public</span> <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm" title="This class represents a column with type T, is the base class for all typed column classes and allows...">ColumnBaseTyped</a>&lt;T&gt;{
<a name="l00025"></a>00025         <span class="keyword">public</span>:
<a name="l00026"></a>00026         <span class="comment">/***************** constructors and destructor *****************/</span>
<a name="l00027"></a>00027         <a class="code" href="classCoGaDB_1_1LookupArray.htm#aee8eddf0ecb92fde6a4761a418c9488a">LookupArray</a>(<span class="keyword">const</span> std::string&amp; name, <a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> db_type, <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d" title="defines a smart pointer to a ColumnBase Object">ColumnPtr</a> column, <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tids);
<a name="l00028"></a>00028         <span class="keyword">virtual</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#abde50097005ee9b996634dcf7ed2450e">~LookupArray</a>();
<a name="l00029"></a>00029 
<a name="l00030"></a>00030         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#afc908013732e12082f5012b1081ae2cb" title="appends a value new_Value to end of column">insert</a>(<span class="keyword">const</span> boost::any&amp; new_Value);
<a name="l00031"></a>00031         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#afc908013732e12082f5012b1081ae2cb" title="appends a value new_Value to end of column">insert</a>(<span class="keyword">const</span> T&amp; new_Value);
<a name="l00032"></a>00032         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a0d8efcd30e03b329e7f78f8f83ea1404" title="updates the value on position tid with a value new_Value">update</a>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid, <span class="keyword">const</span> boost::any&amp; new_value);
<a name="l00033"></a>00033         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a0d8efcd30e03b329e7f78f8f83ea1404" title="updates the value on position tid with a value new_Value">update</a>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tid, <span class="keyword">const</span> boost::any&amp; new_value);  
<a name="l00034"></a>00034         
<a name="l00035"></a>00035         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">remove</span>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid);
<a name="l00036"></a>00036         <span class="comment">//assumes tid list is sorted ascending</span>
<a name="l00037"></a>00037         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <span class="keyword">remove</span>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tid);
<a name="l00038"></a>00038         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a62bc39e59a4e77774cb614035a8e59cf" title="deletes all values stored in the column">clearContent</a>();
<a name="l00039"></a>00039 
<a name="l00040"></a>00040         <span class="keyword">virtual</span> <span class="keyword">const</span> boost::any <span class="keyword">get</span>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid);
<a name="l00041"></a>00041         <span class="comment">//virtual const boost::any* const getRawData()=0;</span>
<a name="l00042"></a>00042         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a976585f7499909ef8433ec331194bfed" title="prints the content of a column">print</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>();
<a name="l00043"></a>00043         <span class="keyword">virtual</span> <span class="keywordtype">size_t</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#ab2d579504adc8c837c18a1ddc691175d" title="returns the number of values (rows) in a column">size</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>();
<a name="l00044"></a>00044         <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a3f396ea8553256c4194d21dc374939f0" title="returns the size in bytes the column consumes in main memory">getSizeinBytes</a>() <span class="keyword">const</span> <span class="keywordflow">throw</span>();
<a name="l00045"></a>00045 
<a name="l00046"></a>00046         <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d" title="defines a smart pointer to a ColumnBase Object">ColumnPtr</a> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a9848338c3dee910d35f293ad2e68573c" title="virtual copy constructor">copy</a>() <span class="keyword">const</span>;
<a name="l00047"></a>00047 
<a name="l00048"></a>00048         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a2fa912aed39b1d12645324a9e57f4b1d" title="store a column on the disc">store</a>(<span class="keyword">const</span> std::string&amp; path);
<a name="l00049"></a>00049         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#ac866b48aad3250f16a9558ac8c968656" title="load column from disc">load</a>(<span class="keyword">const</span> std::string&amp; path);
<a name="l00050"></a>00050         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#adeb912dbc765f0feb09dc4d95b464906" title="use this method to determine whether the column is materialized or a Lookup Column">isMaterialized</a>() <span class="keyword">const</span>  <span class="keywordflow">throw</span>();
<a name="l00051"></a>00051         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a86e8fb83523c163a2751ca099e8fc75e" title="use this method to determine whether the column is materialized or a Lookup Column">isCompressed</a>() <span class="keyword">const</span>  <span class="keywordflow">throw</span>();             
<a name="l00053"></a>00053         <span class="keyword">virtual</span> T&amp; <a class="code" href="classCoGaDB_1_1LookupArray.htm#a51c61bb779dc2eab5d14b5942f90e73f" title="returns type information of internal values">operator[]</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> index);
<a name="l00054"></a>00054         <span class="keyword">private</span>:
<a name="l00055"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#adcab13f5b1e37e226e22095452e50b67">00055</a>         shared_pointer_namespace::shared_ptr&lt;ColumnBaseTyped&lt;T&gt; &gt; <a class="code" href="classCoGaDB_1_1LookupArray.htm#adcab13f5b1e37e226e22095452e50b67">column_</a>;
<a name="l00056"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a446e094d9d595d111d92dacbd4d5a5d2">00056</a>         <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a446e094d9d595d111d92dacbd4d5a5d2">tids_</a>;
<a name="l00057"></a>00057 };
<a name="l00058"></a>00058 
<a name="l00059"></a>00059         <span class="comment">//typedef shared_pointer_namespace::shared_ptr&lt;LookupArray&gt; LookupArrayPtr;</span>
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 <span class="comment">/***************** Start of Implementation Section ******************/</span>
<a name="l00062"></a>00062 
<a name="l00063"></a>00063         
<a name="l00064"></a>00064         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00065"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#aee8eddf0ecb92fde6a4761a418c9488a">00065</a>         <a class="code" href="classCoGaDB_1_1LookupArray.htm#aee8eddf0ecb92fde6a4761a418c9488a">LookupArray&lt;T&gt;::LookupArray</a>(<span class="keyword">const</span> std::string&amp; name, <a class="code" href="namespaceCoGaDB.htm#ac53a708d27568a6584e7c03b4ab659e5">AttributeType</a> db_type, <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d" title="defines a smart pointer to a ColumnBase Object">ColumnPtr</a> column, <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tids) 
<a name="l00066"></a>00066                                                 : <a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm" title="This class represents a column with type T, is the base class for all typed column classes and allows...">ColumnBaseTyped</a>&lt;T&gt;(name, db_type),
<a name="l00067"></a>00067                                                   column_( shared_pointer_namespace::static_pointer_cast&lt;<a class="code" href="classCoGaDB_1_1ColumnBaseTyped.htm" title="This class represents a column with type T, is the base class for all typed column classes and allows...">ColumnBaseTyped</a>&lt;T&gt; &gt; (column) ),
<a name="l00068"></a>00068                                                   tids_(tids) {
<a name="l00069"></a>00069         
<a name="l00070"></a>00070                 assert(<a class="code" href="classCoGaDB_1_1LookupArray.htm#adcab13f5b1e37e226e22095452e50b67">column_</a>!=NULL);
<a name="l00071"></a>00071                 assert(<a class="code" href="classCoGaDB_1_1LookupArray.htm#a446e094d9d595d111d92dacbd4d5a5d2">tids_</a>!=NULL);
<a name="l00072"></a>00072                 assert(db_type==column-&gt;getType());
<a name="l00073"></a>00073 
<a name="l00074"></a>00074         }
<a name="l00075"></a>00075 
<a name="l00076"></a>00076         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00077"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#abde50097005ee9b996634dcf7ed2450e">00077</a>         <a class="code" href="classCoGaDB_1_1LookupArray.htm#abde50097005ee9b996634dcf7ed2450e">LookupArray&lt;T&gt;::~LookupArray</a>(){
<a name="l00078"></a>00078 
<a name="l00079"></a>00079         }
<a name="l00080"></a>00080 
<a name="l00081"></a>00081         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00082"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#afc908013732e12082f5012b1081ae2cb">00082</a>         <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#afc908013732e12082f5012b1081ae2cb" title="appends a value new_Value to end of column">LookupArray&lt;T&gt;::insert</a>(<span class="keyword">const</span> boost::any&amp; ){
<a name="l00083"></a>00083                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00084"></a>00084         }
<a name="l00085"></a>00085         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00086"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a9dbae3a82a8215b6e28953b9f51a9365">00086</a>         <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#afc908013732e12082f5012b1081ae2cb" title="appends a value new_Value to end of column">LookupArray&lt;T&gt;::insert</a>(<span class="keyword">const</span> T&amp;){
<a name="l00087"></a>00087                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00088"></a>00088         }
<a name="l00089"></a>00089         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00090"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a0d8efcd30e03b329e7f78f8f83ea1404">00090</a>         <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a0d8efcd30e03b329e7f78f8f83ea1404" title="updates the value on position tid with a value new_Value">LookupArray&lt;T&gt;::update</a>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> , <span class="keyword">const</span> boost::any&amp; ){
<a name="l00091"></a>00091                 <span class="keywordflow">return</span>  <span class="keyword">false</span>;
<a name="l00092"></a>00092         }
<a name="l00093"></a>00093 
<a name="l00094"></a>00094         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00095"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a9f81d5f546d30147a43fbced29aef0e0">00095</a>         <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a0d8efcd30e03b329e7f78f8f83ea1404" title="updates the value on position tid with a value new_Value">LookupArray&lt;T&gt;::update</a>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>, <span class="keyword">const</span> boost::any&amp;){
<a name="l00096"></a>00096                 <span class="keywordflow">return</span>  <span class="keyword">false</span>;                  
<a name="l00097"></a>00097         }
<a name="l00098"></a>00098         
<a name="l00099"></a>00099         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00100"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a13aebff1e2550f0f289aa060c8ec5d31">00100</a>         <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a13aebff1e2550f0f289aa060c8ec5d31" title="deletes the value on position tid">LookupArray&lt;T&gt;::remove</a>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> ){
<a name="l00101"></a>00101 
<a name="l00102"></a>00102                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00103"></a>00103         }
<a name="l00104"></a>00104         
<a name="l00105"></a>00105         <span class="comment">//assumes tid list is sorted ascending</span>
<a name="l00106"></a>00106         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00107"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a8bf5390ab389c9602010a05079181bc6">00107</a>         <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a13aebff1e2550f0f289aa060c8ec5d31" title="deletes the value on position tid">LookupArray&lt;T&gt;::remove</a>(<a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a>){
<a name="l00108"></a>00108                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00109"></a>00109         }
<a name="l00110"></a>00110 
<a name="l00111"></a>00111         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00112"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a62bc39e59a4e77774cb614035a8e59cf">00112</a>         <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a62bc39e59a4e77774cb614035a8e59cf" title="deletes all values stored in the column">LookupArray&lt;T&gt;::clearContent</a>(){
<a name="l00113"></a>00113                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00114"></a>00114         }
<a name="l00115"></a>00115         
<a name="l00116"></a>00116         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00117"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a103d58f7da455ea389075b98e823e071">00117</a>         <span class="keyword">const</span> boost::any <a class="code" href="classCoGaDB_1_1LookupArray.htm#a103d58f7da455ea389075b98e823e071" title="generic function for fetching a value form a column (slow)">LookupArray&lt;T&gt;::get</a>(<a class="code" href="namespaceCoGaDB.htm#a87401571c18eb717e2135969e67a0cf2">TID</a> tid){
<a name="l00118"></a>00118                 <span class="keywordflow">return</span> boost::any((*<span class="keyword">this</span>)[tid]);
<a name="l00119"></a>00119         }
<a name="l00120"></a>00120 
<a name="l00121"></a>00121         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00122"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a976585f7499909ef8433ec331194bfed">00122</a>         <span class="keywordtype">void</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a976585f7499909ef8433ec331194bfed" title="prints the content of a column">LookupArray&lt;T&gt;::print</a>() <span class="keyword">const</span> throw(){
<a name="l00123"></a>00123                 
<a name="l00124"></a>00124                 <span class="keyword">const</span> shared_pointer_namespace::shared_ptr&lt;ColumnBaseTyped&lt;T&gt; &gt; column = column_;
<a name="l00125"></a>00125                 <span class="keyword">const</span> <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> tids = tids_;
<a name="l00126"></a>00126 
<a name="l00127"></a>00127                 std::cout &lt;&lt; <span class="stringliteral">&quot;Lookup Array for Column &quot;</span> &lt;&lt; column_-&gt;getName() &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;
<a name="l00128"></a>00128                 <span class="keywordflow">if</span>(column_-&gt;isMaterialized()){
<a name="l00129"></a>00129                         std::cout &lt;&lt; <span class="stringliteral">&quot;which is a materialized Column&quot;</span> &lt;&lt; std::endl;
<a name="l00130"></a>00130                 }<span class="keywordflow">else</span>{
<a name="l00131"></a>00131                         std::cout &lt;&lt; <span class="stringliteral">&quot;which is a LookupArray of a Lookup column&quot;</span> &lt;&lt; std::endl;
<a name="l00132"></a>00132                 }
<a name="l00133"></a>00133                 std::cout &lt;&lt; <span class="stringliteral">&quot;| values | Translatetion TIDS | Index in Lookup Table |&quot;</span> &lt;&lt; std::endl;
<a name="l00134"></a>00134                 <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;tids-&gt;size();i++){
<a name="l00135"></a>00135                         std::cout &lt;&lt; <span class="stringliteral">&quot;| &quot;</span> &lt;&lt; (*column_)[(*tids_)[i]] &lt;&lt; <span class="stringliteral">&quot; | &quot;</span> &lt;&lt; (*tids_)[i] &lt;&lt; <span class="stringliteral">&quot; | &quot;</span> &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot; |&quot;</span> &lt;&lt; std::endl;
<a name="l00136"></a>00136                 }
<a name="l00137"></a>00137 
<a name="l00138"></a>00138 
<a name="l00139"></a>00139         }
<a name="l00140"></a>00140         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00141"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#ab2d579504adc8c837c18a1ddc691175d">00141</a>         <span class="keywordtype">size_t</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#ab2d579504adc8c837c18a1ddc691175d" title="returns the number of values (rows) in a column">LookupArray&lt;T&gt;::size</a>() <span class="keyword">const</span> throw(){
<a name="l00142"></a>00142 
<a name="l00143"></a>00143                 <span class="keywordflow">return</span> tids_-&gt;size();
<a name="l00144"></a>00144         }
<a name="l00145"></a>00145         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00146"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a9848338c3dee910d35f293ad2e68573c">00146</a>         <span class="keyword">const</span> <a class="code" href="classCoGaDB_1_1ColumnBase.htm#ae8d2ac257af16e7d8bc78e1ea43cb14d" title="defines a smart pointer to a ColumnBase Object">ColumnPtr</a> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a9848338c3dee910d35f293ad2e68573c" title="virtual copy constructor">LookupArray&lt;T&gt;::copy</a>()<span class="keyword"> const</span>{
<a name="l00147"></a>00147                 <a class="code" href="namespaceCoGaDB.htm#ae7e30b13ad239f7010ad333125321e9a">PositionListPtr</a> new_tids (<span class="keyword">new</span> <a class="code" href="namespaceCoGaDB.htm#a3903511755e2c745226394b999ddb8a8">PositionList</a>(*tids_));
<a name="l00148"></a>00148                 <span class="keywordflow">return</span> <a class="code" href="namespaceCoGaDB.htm#a3d7ce6ae5ca4381f2b4f1db23f982c5d" title="makes a smart pointer to a ColumnBase Object visible in the namespace">ColumnPtr</a>(<span class="keyword">new</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm" title="A LookupArray is a LookupColumn which is applied on a materialized column (of the table that is index...">LookupArray&lt;T&gt;</a>(this-&gt;name_,this-&gt;db_type_,this-&gt;column_,new_tids));
<a name="l00149"></a>00149         }
<a name="l00150"></a>00150         <span class="comment">/***************** relational operations on LookupArrays which return lookup tables *****************/</span>
<a name="l00151"></a>00151 <span class="comment">//      template&lt;class T&gt;</span>
<a name="l00152"></a>00152 <span class="comment">//      const std::vector&lt;TID&gt; LookupArray&lt;T&gt;::sort(const ComputeDevice comp_dev) const {</span>
<a name="l00153"></a>00153 
<a name="l00154"></a>00154 <span class="comment">//              return std::vector&lt;TID&gt;();</span>
<a name="l00155"></a>00155 <span class="comment">//      }</span>
<a name="l00156"></a>00156 
<a name="l00157"></a>00157 <span class="comment">//      template&lt;class T&gt; </span>
<a name="l00158"></a>00158 <span class="comment">//      const std::vector&lt;TID&gt; LookupArray&lt;T&gt;::selection(const boost::any&amp; value_for_comparison, const ValueComparator comp, const ComputeDevice comp_dev) const {</span>
<a name="l00159"></a>00159 <span class="comment">//              return std::vector&lt;TID&gt;();</span>
<a name="l00160"></a>00160 <span class="comment">//      }</span>
<a name="l00161"></a>00161 <span class="comment">//      //join algorithms</span>
<a name="l00162"></a>00162 <span class="comment">//      template&lt;class T&gt;</span>
<a name="l00163"></a>00163 <span class="comment">//      const std::vector&lt;TID_Pair&gt; LookupArray&lt;T&gt;::sort_merge_join(ColumnPtr join_LookupArray, const ComputeDevice comp_dev) const{</span>
<a name="l00164"></a>00164 <span class="comment">//              return std::vector&lt;TID_Pair&gt;();</span>
<a name="l00165"></a>00165 <span class="comment">//      }</span>
<a name="l00166"></a>00166 <span class="comment">//      template&lt;class T&gt;</span>
<a name="l00167"></a>00167 <span class="comment">//      const std::vector&lt;TID_Pair&gt; LookupArray&lt;T&gt;::nested_loop_join(ColumnPtr join_LookupArray, const ComputeDevice comp_dev) const{</span>
<a name="l00168"></a>00168 <span class="comment">//              return false;</span>
<a name="l00169"></a>00169 <span class="comment">//      }</span>
<a name="l00170"></a>00170         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00171"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a2fa912aed39b1d12645324a9e57f4b1d">00171</a>         <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a2fa912aed39b1d12645324a9e57f4b1d" title="store a column on the disc">LookupArray&lt;T&gt;::store</a>(<span class="keyword">const</span> std::string&amp;){
<a name="l00172"></a>00172                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00173"></a>00173         }
<a name="l00174"></a>00174         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00175"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#ac866b48aad3250f16a9558ac8c968656">00175</a>         <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#ac866b48aad3250f16a9558ac8c968656" title="load column from disc">LookupArray&lt;T&gt;::load</a>(<span class="keyword">const</span> std::string&amp;){
<a name="l00176"></a>00176                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00177"></a>00177         }
<a name="l00178"></a>00178         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00179"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#adeb912dbc765f0feb09dc4d95b464906">00179</a>         <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#adeb912dbc765f0feb09dc4d95b464906" title="use this method to determine whether the column is materialized or a Lookup Column">LookupArray&lt;T&gt;::isMaterialized</a>() <span class="keyword">const</span>  throw(){
<a name="l00180"></a>00180                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00181"></a>00181         }
<a name="l00182"></a>00182         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00183"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a86e8fb83523c163a2751ca099e8fc75e">00183</a>         <span class="keywordtype">bool</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a86e8fb83523c163a2751ca099e8fc75e" title="use this method to determine whether the column is materialized or a Lookup Column">LookupArray&lt;T&gt;::isCompressed</a>() <span class="keyword">const</span>  throw(){
<a name="l00184"></a>00184                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00185"></a>00185         }
<a name="l00186"></a>00186         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00187"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a51c61bb779dc2eab5d14b5942f90e73f">00187</a>         T&amp; <a class="code" href="classCoGaDB_1_1LookupArray.htm#a51c61bb779dc2eab5d14b5942f90e73f" title="returns type information of internal values">LookupArray&lt;T&gt;::operator[]</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> index){
<a name="l00188"></a>00188                 <span class="keywordflow">return</span> (*column_)[(*tids_)[index]];
<a name="l00189"></a>00189         }
<a name="l00190"></a>00190 
<a name="l00191"></a>00191         <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
<a name="l00192"></a><a class="code" href="classCoGaDB_1_1LookupArray.htm#a3f396ea8553256c4194d21dc374939f0">00192</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classCoGaDB_1_1LookupArray.htm#a3f396ea8553256c4194d21dc374939f0" title="returns the size in bytes the column consumes in main memory">LookupArray&lt;T&gt;::getSizeinBytes</a>() <span class="keyword">const</span> throw(){
<a name="l00193"></a>00193                 <span class="keywordflow">return</span> tids_-&gt;capacity()*<span class="keyword">sizeof</span>(<span class="keyword">typename</span> PositionList::value_type);
<a name="l00194"></a>00194         }
<a name="l00195"></a>00195 
<a name="l00196"></a>00196 <span class="comment">/***************** End of Implementation Section ******************/</span>
<a name="l00197"></a>00197 
<a name="l00198"></a>00198 
<a name="l00199"></a>00199 
<a name="l00200"></a>00200 }; <span class="comment">//end namespace CogaDB</span>
<a name="l00201"></a>00201 
</pre></div></div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Tue Apr 30 2013 14:01:03 for Database Implementation Techniques Programming Task SoSe2013 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
